{"version":3,"file":"static/js/199.32136e14.chunk.js","mappings":"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","sources":["components/Header/Header.styled.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactsFilter/Filter.styled.js","components/ContactsFilter/Filter.jsx","components/ContactsUserMenu/UserMenu.styled.js","components/ContactsUserMenu/UserMenu.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerHeader = styled.div`\n  width: 80%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  text-align: right;\n  nav {\n    display: flex;\n    justify-content: flex-end;\n    gap: 25px;\n  }\n  nav a {\n    color: white;\n    text-decoration: none;\n    font-weight: bold;\n  }\n  nav a:hover,\n  :focus {\n    text-decoration: underline;\n  }\n`;\nexport const HeaderStyled = styled.header`\n  background-color: #007bff;\n  color: #fff;\n  text-align: center;\n  padding: 5px;\n`;\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  box-sizing: border-box;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  height: 500px;\n  justify-content: center;\n  align-items: center;\n`;\nexport const HeaderTitle = styled.h1`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 30px;\n  color: #010101;\n  margin-bottom: 20px;\n`;\nexport const Logo = styled.p`\n  font-weight: 700;\n  margin: 0;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  max-width: 400px;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 90%;\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 100%;\n  padding: 10px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { addContact, fetchContacts } from 'api/api';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const submit = async (evt, dispatch, contacts) => {\n  const formReset = () => {\n    evt.target.name.value = '';\n    evt.target.querySelector('input[type=\"tel\"]').value = '';\n  };\n  const contactObject = {\n    name: evt.target.name.value,\n    number: evt.target.querySelector('input[type=\"tel\"]').value,\n  };\n  if (\n    contacts.find(\n      contact => contact.name.toUpperCase() === contactObject.name.toUpperCase()\n    )\n  ) {\n    toast.error(`${contactObject.name} is already in the contacts`);\n  } else {\n    await dispatch(addContact(contactObject));\n    await dispatch(fetchContacts());\n    toast.success(`${contactObject.name} added to contacts`);\n  }\n  await formReset();\n};\n\nexport const ContactForm = ({ formSubmit }) => {\n  return (\n    <div>\n      <Form onSubmit={formSubmit}>\n        <Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zAZа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Name\"\n            required\n          />\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"Number\"\n            required\n          />\n          <Button type=\"submit\">Add new contact</Button>\n        </Label>\n      </Form>\n      <ToastContainer />\n    </div>\n  );\n};\nContactForm.propTypes = {\n  formSubmit: PropTypes.func,\n};","import styled from 'styled-components';\n\nexport const ListByContact = styled.ul`\n  width: 100%;\n  margin: 0 auto; \n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  background-color: red;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { ListByContact, ListItem, Button } from './ContactList.styled';\n\nexport const ContactList = ({ contacts, filter, filtering, deleting }) => {\n  const filteringByName = filtering();\n  return (\n    <ListByContact>\n      {contacts.length > 0 ? (\n        filter.length > 0 ? (\n          filteringByName.map(contact => {\n            return (\n              <ListItem key={contact.id}>\n                {contact.name}: {contact.number}\n                <Button type=\"Button\" id={contact.id} onClick={deleting}>\n                  Delete\n                </Button>\n              </ListItem>\n            );\n          })\n        ) : (\n          contacts.map(contact => {\n            return (\n              <ListItem key={contact.id}>\n                {contact.name}: {contact.number}\n                <Button type=\"button\" id={contact.id} onClick={deleting}>\n                  Delete\n                </Button>\n              </ListItem>\n            );\n          })\n        )\n      ) : (\n        <ListItem>You dont have any contacts yet</ListItem>\n      )}\n    </ListByContact>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n  filtering: PropTypes.func,\n  deleting: PropTypes.func,\n};","import styled from 'styled-components';\n\nexport const CenteredContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  font-weight: bold;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  padding: 10px;\n  margin-left: 5px;\n  margin-bottom: 10px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n`;\n","import PropTypes from \"prop-types\";\nimport { CenteredContainer, Label, Input } from \"./Filter.styled\";\n\nexport const Filter = ({ input }) => {\n    return <CenteredContainer>\n        <Label>Find contacts by name</Label>\n        <Input name=\"name\" onChange={input} placeholder=\"Name\"></Input>\n    </CenteredContainer>\n}\nFilter.propTypes = {\n    input: PropTypes.func\n}","import styled from 'styled-components';\n\nexport const UserContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 15px;\n`;\nexport const MailUser = styled.p`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  cursor: pointer;\n`;\n","import { UserContainer, MailUser, Button } from './UserMenu.styled';\n\nexport const UserMenu = ({ userEmail, onLogout }) => {\n  return (\n    <UserContainer>\n      <MailUser>{userEmail}</MailUser>\n      <Button onClick={onLogout}>Logout</Button>\n    </UserContainer>\n  );\n};","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 800px;\n  display: flex;\n  margin: 0 auto;\n  padding: 15px;\n  box-sizing: border-box;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  max-width: 800px;\n  flex-direction: column;\n  gap: 20px;\n`;\nexport const StyledDiv = styled.div`\n  padding: 15px;\n  width: 100%;\n  border-radius: 5px;\n  box-sizing: border-box;\n`;\n\nexport const HeaderTitle = styled.h1`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 40px;\n  color: #010101;\n  margin-bottom: 20px;\n`;\n\nexport const ContactsTitle = styled.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 40px;\n  color: #010101;\n  margin-bottom: 20px;\n`;\n","\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { fetchContacts } from 'api/api';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/ContactsFilter/Filter';\nimport { ContainerHeader, HeaderStyled } from 'components/Header/Header.styled';\nimport { UserMenu } from 'components/ContactsUserMenu/UserMenu';\nimport { Container, HeaderTitle, ContactsTitle, StyledDiv } from './Contacts.styled';\nimport { changeFilter } from 'redux/filterSlice';\nimport { deleteContact } from 'api/api';\n\nconst Contacts = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const userEmail = useSelector(state => state.auth.user.email);\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      return navigate('/', { replace: true });\n    } else {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, isLoggedIn, navigate]);\n\n  const onSubmitContact = (evt) => {\n    // ваша логика\n  };\n\n  const onChangeInput = (evt) => {\n    dispatch(changeFilter(evt.target.value));\n  };\n\n  const filterByName = () => {\n    return contacts.filter((contact) =>\n      contact.name.toUpperCase().includes(filter.toUpperCase())\n    );\n  };\n\n  const deletingContact = (evt) => {\n    dispatch(deleteContact(evt.target.id));\n  };\n\n  const onLogout = () => {\n    // ваша логика выхода\n  };\n\n  return (\n    <>\n      <HeaderStyled>\n        <ContainerHeader>\n          <nav>\n            <NavLink to=\"/contacts\">Contacts</NavLink>\n          </nav>\n        </ContainerHeader>\n      </HeaderStyled>\n      <section>\n        <Container>\n          <UserMenu userEmail={userEmail} onLogout={onLogout} />\n          <StyledDiv>\n            <HeaderTitle>Phonebook</HeaderTitle>\n            <ContactForm formSubmit={onSubmitContact} />\n            <ContactsTitle>Contacts</ContactsTitle>\n            <Filter input={onChangeInput} />\n            <ContactList\n              contacts={contacts}\n              filter={filter}\n              filtering={filterByName}\n              deleting={deletingContact}\n            />\n          </StyledDiv>\n        </Container>\n      </section>\n    </>\n  );\n};\n\nexport default Contacts;\n\n\n\n// import { useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { NavLink, useNavigate } from 'react-router-dom';\n// import { fetchContacts } from 'api/api';\n\n// import { ContactForm } from 'components/ContactForm/ContactForm';\n// import { ContactList } from 'components/ContactList/ContactList';\n// import { Filter } from 'components/ContactsFilter/Filter';\n// import { ContainerHeader, HeaderStyled } from 'components/Header/Header.styled';\n// import { UserMenu } from 'components/ContactsUserMenu/UserMenu';\n// import {\n//   Container,\n//   HeaderTitle,\n//   ContactsTitle,\n//   StyledDiv,\n// } from './Contacts.styled';\n\n// const Contacts = ({\n//   onSubmitContact,\n//   onChangeInput,\n//   contacts,\n//   filter,\n//   filterByName,\n//   deletingContact,\n//   userEmail,\n//   onLogout,\n//   isLoggedIn,\n// }) => {\n//   const navigate = useNavigate();\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     if (!isLoggedIn) {\n//       return navigate('/', { replace: true });\n//     } else {\n//       dispatch(fetchContacts());\n//     }\n//   }, [dispatch, isLoggedIn, navigate]);\n//   return (\n//     <>\n//       <HeaderStyled>\n//         <ContainerHeader>\n//           <nav>\n//             <NavLink to=\"/contacts\">Contacts</NavLink>\n//           </nav>\n//         </ContainerHeader>\n//       </HeaderStyled>\n//       <section>\n//         <Container>\n//           <UserMenu userEmail={userEmail} onLogout={onLogout} />\n//           <StyledDiv>\n//             <HeaderTitle>Phonebook</HeaderTitle>\n//             <ContactForm formSubmit={onSubmitContact} />\n//             <ContactsTitle>Contacts</ContactsTitle>\n//             <Filter input={onChangeInput} />\n//             <ContactList\n//               contacts={contacts}\n//               filter={filter}\n//               filtering={filterByName}\n//               deleting={deletingContact}\n//             />\n//           </StyledDiv>\n//         </Container>\n//       </section>\n//     </>\n//   );\n// };\n// export default Contacts;"],"names":["ContainerHeader","styled","_templateObject","_taggedTemplateLiteral","HeaderStyled","_templateObject2","Container","_templateObject3","HeaderTitle","_templateObject4","_templateObject5","Form","Label","Input","Button","ContactForm","_ref2","formSubmit","_jsxs","children","_jsx","onSubmit","type","name","pattern","title","placeholder","required","ToastContainer","ListByContact","ListItem","ContactList","_ref","contacts","filter","filtering","deleting","filteringByName","length","map","contact","number","id","onClick","CenteredContainer","Filter","input","onChange","UserContainer","MailUser","UserMenu","userEmail","onLogout","StyledDiv","ContactsTitle","navigate","useNavigate","dispatch","useDispatch","isLoggedIn","useSelector","state","auth","user","email","items","useEffect","replace","fetchContacts","_Fragment","NavLink","to","evt","changeFilter","target","value","toUpperCase","includes","deleteContact"],"sourceRoot":""}