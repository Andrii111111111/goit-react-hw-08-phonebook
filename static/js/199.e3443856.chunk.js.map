{"version":3,"file":"static/js/199.e3443856.chunk.js","mappings":"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","sources":["components/Header/Header.styled.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactsFilter/Filter.styled.js","components/ContactsFilter/Filter.jsx","components/ContactsUserMenu/UserMenu.styled.js","components/ContactsUserMenu/UserMenu.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerHeader = styled.div`\n  width: 80%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  text-align: right;\n  nav {\n    display: flex;\n    justify-content: flex-end;\n    gap: 25px;\n  }\n  nav a {\n    color: white;\n    text-decoration: none;\n    font-weight: bold;\n  }\n  nav a:hover,\n  :focus {\n    text-decoration: underline;\n  }\n`;\nexport const HeaderStyled = styled.header`\n  background-color: #007bff;\n  color: #fff;\n  text-align: center;\n  padding: 5px;\n`;\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  box-sizing: border-box;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n  height: 500px;\n  justify-content: center;\n  align-items: center;\n`;\nexport const HeaderTitle = styled.h1`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 30px;\n  color: #010101;\n  margin-bottom: 20px;\n`;\nexport const Logo = styled.p`\n  font-weight: 700;\n  margin: 0;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  max-width: 400px;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 90%;\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 100%;\n  padding: 10px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n`;\n","\nimport { useSelector } from 'react-redux';\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact, fetchContacts } from 'api/api';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(state => state.contacts.items);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n\n    const contactObject = {\n      name,\n      number,\n    };\n\n    if (\n      contacts.find(\n        (contact) =>\n          contact.name.toUpperCase() === contactObject.name.toUpperCase()\n      )\n    ) {\n      toast.error(`${contactObject.name} is already in the contacts`);\n    } else {\n      await dispatch(addContact(contactObject));\n      await dispatch(fetchContacts());\n      toast.success(`${contactObject.name} added to contacts`);\n    }\n\n    formReset();\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zAZа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Name\"\n            required\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"Number\"\n            required\n            value={number}\n            onChange={(e) => setNumber(e.target.value)}\n          />\n          <Button type=\"submit\">Add new contact</Button>\n        </Label>\n      </Form>\n      <ToastContainer />\n    </div>\n  );\n};\n\n\n\n","import styled from 'styled-components';\n\nexport const ListByContact = styled.ul`\n  width: 100%;\n  margin: 0 auto; \n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  background-color: red;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  cursor: pointer;\n`;\n","\n\nimport PropTypes from 'prop-types';\nimport { ListByContact, ListItem, Button } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'api/api';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n\n  const dispatch = useDispatch();\n\n  const filteringByName = () => {\n    return contacts.filter(contact =>\n      contact.name.toUpperCase().includes(filter.toUpperCase())\n    );\n  };\n\n  const filteredContacts = filter.length > 0 ? filteringByName() : contacts;\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ListByContact>\n      {filteredContacts.length > 0 ? (\n        filteredContacts.map(contact => (\n          <ListItem key={contact.id}>\n            {contact.name}: {contact.number}\n            <Button type=\"button\" onClick={() => handleDelete(contact.id)}>\n              Delete\n            </Button>\n          </ListItem>\n        ))\n      ) : (\n        <ListItem>You don't have any contacts yet</ListItem>\n      )}\n    </ListByContact>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n  onDelete: PropTypes.func,\n};\n\n\n\n","import styled from 'styled-components';\n\nexport const CenteredContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  font-weight: bold;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  padding: 10px;\n  margin-left: 5px;\n  margin-bottom: 10px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n`;\n","\n\nimport { CenteredContainer, Label, Input } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    dispatch(changeFilter(evt.target.value));\n  };\n\n  return (\n    <CenteredContainer>\n      <Label>Find contacts by name</Label>\n      <Input name=\"name\" onChange={handleChange} placeholder=\"Name\" />\n    </CenteredContainer>\n  );\n};\n\n\n\n","import styled from 'styled-components';\n\nexport const UserContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 15px;\n`;\nexport const MailUser = styled.p`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  cursor: pointer;\n`;\n","\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UserContainer, MailUser, Button } from './UserMenu.styled';\nimport { logOut } from 'api/api';\n\nexport const UserMenu = () => {\n  const userEmail = useSelector(state => state.auth.user.email);\n  const dispatch = useDispatch();\n\n  const handleLogout = async () => {\n    await dispatch(logOut());\n  };\n\n  return (\n    <UserContainer>\n      <MailUser>{userEmail}</MailUser>\n      <Button onClick={handleLogout}>Logout</Button>\n    </UserContainer>\n  );\n};\n\n\n\n\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 800px;\n  display: flex;\n  margin: 0 auto;\n  padding: 15px;\n  box-sizing: border-box;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  max-width: 800px;\n  flex-direction: column;\n  gap: 20px;\n`;\nexport const StyledDiv = styled.div`\n  padding: 15px;\n  width: 100%;\n  border-radius: 5px;\n  box-sizing: border-box;\n`;\n\nexport const HeaderTitle = styled.h1`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 40px;\n  color: #010101;\n  margin-bottom: 20px;\n`;\n\nexport const ContactsTitle = styled.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 40px;\n  color: #010101;\n  margin-bottom: 20px;\n`;\n","\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { fetchContacts } from 'api/api';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/ContactsFilter/Filter';\nimport { ContainerHeader, HeaderStyled } from 'components/Header/Header.styled';\nimport { UserMenu } from 'components/ContactsUserMenu/UserMenu';\nimport { Container, HeaderTitle, ContactsTitle, StyledDiv } from './Contacts.styled';\nimport { changeFilter } from 'redux/filterSlice';\nimport { deleteContact } from 'api/api';\n\nconst Contacts = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const userEmail = useSelector(state => state.auth.user.email);\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      return navigate('/', { replace: true });\n    } else {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, isLoggedIn, navigate]);\n\n  const onSubmitContact = (evt) => {\n   \n  };\n\n  const onChangeInput = (evt) => {\n    dispatch(changeFilter(evt.target.value));\n  };\n\n  const filterByName = () => {\n    return contacts.filter((contact) =>\n      contact.name.toUpperCase().includes(filter.toUpperCase())\n    );\n  };\n\n  const deletingContact = (evt) => {\n    dispatch(deleteContact(evt.target.id));\n  };\n\n  const onLogout = () => {\n  \n  };\n\n  return (\n    <>\n      <HeaderStyled>\n        <ContainerHeader>\n          <nav>\n            <NavLink to=\"/contacts\">Contacts</NavLink>\n          </nav>\n        </ContainerHeader>\n      </HeaderStyled>\n      <section>\n        <Container>\n          <UserMenu userEmail={userEmail} onLogout={onLogout} />\n          <StyledDiv>\n            <HeaderTitle>Phonebook</HeaderTitle>\n            <ContactForm formSubmit={onSubmitContact} />\n            <ContactsTitle>Contacts</ContactsTitle>\n            <Filter input={onChangeInput} />\n            <ContactList\n              contacts={contacts}\n              filter={filter}\n              filtering={filterByName}\n              deleting={deletingContact}\n            />\n          </StyledDiv>\n        </Container>\n      </section>\n    </>\n  );\n};\n\nexport default Contacts;\n\n\n\n"],"names":["ContainerHeader","styled","_templateObject","_taggedTemplateLiteral","HeaderStyled","_templateObject2","Container","_templateObject3","HeaderTitle","_templateObject4","_templateObject5","Form","Label","Input","Button","ContactForm","contacts","useSelector","state","items","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","evt","contactObject","_context","prev","next","preventDefault","find","contact","toUpperCase","toast","concat","addContact","fetchContacts","stop","_x","apply","arguments","_jsxs","children","_jsx","onSubmit","type","pattern","title","placeholder","required","value","onChange","e","target","ToastContainer","ListByContact","ListItem","ContactList","filter","filteredContacts","length","includes","map","onClick","id","deleteContact","CenteredContainer","Filter","changeFilter","UserContainer","MailUser","UserMenu","userEmail","auth","user","email","handleLogout","logOut","StyledDiv","ContactsTitle","navigate","useNavigate","isLoggedIn","useEffect","replace","_Fragment","NavLink","to","onLogout","formSubmit","input","filtering","deleting"],"sourceRoot":""}