{"version":3,"file":"static/js/249.6188cf6b.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ErrMessage/ErrMessage.styled.js","components/ErrMessage/ErrMessage.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Loader/loader.styled.js","components/Loader/loader.jsx","components/TitleContacts/TitleContacts.styled.js","components/TitleContacts/TitleContacts.jsx","components/TitlePhonebook/TitlePhonebook.styled.js","components/TitlePhonebook/TitlePhonebook.jsx","Page/Phonebook.jsx","components/Section/Section.styled.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContactItems = state => state.contacts.contacts.items;\nexport const selectContactIsLoading = state =>\n  state.contacts.contacts.isLoading;\nexport const selectContactError = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContactItems, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { object, string, number } from 'yup';\nimport { selectContactItems } from 'redux/selectors';\nimport { addContact } from 'redux/operationsContacts';\nimport { Button, TextField } from '@mui/material';\nimport { useFormik } from 'formik';\n\nconst schema = object({\n  name: string()\n    .min(3, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required!'),\n  number: number('must be a number').min(2, 'Too Short!').required('Required!'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactItems);\n\n  const handleSubmit = (values, { resetForm }) => {\n    resetForm();\n    if (\n      contacts.find(\n        ({ name: contactName }) =>\n          contactName.toLowerCase() === values.name.toLowerCase()\n      )\n    ) {\n      alert(`${values.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(values));\n\n    console.log(values);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    onSubmit:  handleSubmit ,\n    validationSchema:  schema ,\n  });\n\n  return (    \n      <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n        <div className='inputWrap'>\n          <TextField\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Enter name ...\"\n            label=\"Name\"\n            variant=\"outlined\"\n            onChange={formik.handleChange}\n            value={formik.values.name}\n          />\n          {formik.touched.name && formik.errors.name ? (\n        <div className='FormikErr'>{formik.errors.name}</div>\n      ) : null}\n          {/* <FormError name=\"name\" /> */}\n        </div>\n        <div className='inputWrap'>\n          <TextField\n            type=\"tel\"\n            name=\"number\"\n            label=\"Phone\"\n            id=\"number\"\n            placeholder=\"tel: xxx-xx-xx\"\n            onChange={formik.handleChange}\n            value={formik.values.number}\n          />\n           {formik.touched.number && formik.errors.number ? (\n        <div className='FormikErr'>{formik.errors.number}</div>\n      ) : null}\n          {/* <FormError name=\"number\" /> */}\n        </div>\n        <Button variant=\"contained\" type=\"submit\">\n          Add contact\n        </Button>\n      </form>    \n  );\n};","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n  gap: 10px;\n\n  li {\n    font-weight: 500;\n\n    button {\n      width: max-content;\n      padding: 5px 10px;\n      border-radius: 5px;\n      margin-left: 15px;\n      margin-bottom: 5px;\n      border: none;\n      box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.2), 1px 1px 3px rgba(0, 0, 0, 0.2);\n    }\n  }\n`;\n","import { Button } from '@mui/material';\nimport { List } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operationsContacts';\nimport { selectVisibleContacts } from 'redux/selectors';\n\n\nexport const ContactList = () => {\n  \n  const dispatch = useDispatch();\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n \n  return (\n    <List>\n      {[\n        visibleContacts.map(({ id, name, number }) => {\n          return (\n            <li key={id}>\n              {name}: {number}\n              {/* <button onClick={() => onDeleteContact(id)}>Delete</button> */}\n              <Button variant=\"contained\" onClick={() => onDeleteContact(id)}>Delete</Button>\n            </li>\n          );\n        }),\n      ]}\n    </List>\n  );\n};","import styled from 'styled-components';\n\nexport const ErrorText = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  color: red;\n`;\n","import React from 'react';\nimport { ErrorText } from './ErrMessage.styled';\nimport { useSelector } from 'react-redux';\nimport { selectContactError } from 'redux/selectors';\n\nconst ErrMessage = () => {\n  const error = useSelector(selectContactError)\n  console.log(error)\n  return <ErrorText> {error.message} </ErrorText>;\n};\n\nexport default ErrMessage;","import styled from 'styled-components';\n\nexport const FilterWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 15px;\n  width: 250px;\n  height: 26px;\n  margin-bottom: 50px;\n  outline: none;\n\n  label {\n    font-weight: 500;\n    margin-bottom: 5px;\n  }\n  input {\n    font-size: 15px;\n    width: 250px;\n    height: 26px;\n    outline: none;\n    border-radius: 5px;\n    background-color: #fff;\n  }\n`;\n","import React, { useState } from 'react';\nimport { FilterWrap } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filterSlice';\nimport { TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const [filter, setFilter] = useState('');\n\n  const changeInput = input => {\n    setFilter(input.value);\n\n    dispatch(filterContacts(input.value));\n  };\n  return (\n    <FilterWrap>\n      <TextField\n        autoComplete=\"off\"\n        label=\"Find contacts by name\"\n        variant=\"outlined\"\n        type=\"text\"\n        id=\"filter\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => changeInput(e.target)}\n      />\n    </FilterWrap>\n  );\n};","import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`;\n\nexport const LoadMessage = styled.div`\n  margin-bottom: 10px;\n  font-size: large;\n  font-weight: 500;\n`;\n","import { Hourglass } from  'react-loader-spinner'\nimport { LoadMessage, LoaderWrap } from './loader.styled';\n\n\nexport const Loader = () => {\n    return (\n      <LoaderWrap >\n        <LoadMessage>Loading...</LoadMessage>\n        <Hourglass\n          visible={true}\n          height=\"50\"\n          width=\"50\"\n          ariaLabel=\"hourglass-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          colors={['#306cce', '#72a1ed']} \n        />\n      </LoaderWrap>\n    );\n  };","import styled from 'styled-components';\n\nexport const TitleCont = styled.h2`\n  font-size: 32px;\n  font-weight: 500;\n  margin-bottom: 30px;\n`;\n","import { TitleCont } from \"./TitleContacts.styled\"\n\nexport const TitleContacts = ({title}) => {\n  return (\n    <TitleCont>{title}</TitleCont>\n  )\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 40px;\n  font-weight: 600;\n  margin-bottom: 30px;\n`;\n","import { Title } from \"./TitlePhonebook.styled\"\n\n\nexport const TitlePhonebook = ({title}) => {\n    return (\n      <Title>{title}</Title>\n    )\n  }","import { Container } from '@mui/material';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport ErrMessage from 'components/ErrMessage/ErrMessage';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/loader';\nimport { Section } from 'components/Section/Section.styled';\nimport { TitleContacts } from 'components/TitleContacts/TitleContacts';\nimport { TitlePhonebook } from 'components/TitlePhonebook/TitlePhonebook';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operationsContacts';\nimport { selectContactError, selectContactIsLoading } from 'redux/selectors';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectContactIsLoading);\n  const error = useSelector(selectContactError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <main>\n        <Container>\n          <Section>\n            <TitlePhonebook title=\"Phonebook\" />\n            <ContactForm />\n          </Section>\n          <Section>\n            <TitleContacts title=\"Contacts\" />\n            <Filter />\n            <ContactList />\n            {isLoading && <Loader />}\n            {error && <ErrMessage />}\n          </Section>\n        </Container>\n      </main>\n    </>\n  );\n};\n\nexport default Phonebook;","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 20px 0;\n  padding-left: 50px;\n`;\n"],"names":["selectContactItems","state","contacts","items","selectContactIsLoading","isLoading","selectContactError","error","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","schema","object","string","min","max","required","number","ContactForm","dispatch","useDispatch","useSelector","formik","useFormik","initialValues","onSubmit","values","_ref","resetForm","find","_ref2","alert","concat","addContact","console","log","validationSchema","_jsxs","autoComplete","handleSubmit","children","className","_jsx","TextField","type","id","placeholder","label","variant","onChange","handleChange","value","touched","errors","Button","List","styled","_templateObject","_taggedTemplateLiteral","ContactList","visibleContacts","map","onClick","contactId","deleteContact","ErrorText","message","FilterWrap","Filter","_useState","useState","_useState2","_slicedToArray","setFilter","e","input","target","filterContacts","LoaderWrap","LoadMessage","_templateObject2","Loader","Hourglass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","TitleCont","TitleContacts","title","Title","TitlePhonebook","useEffect","fetchContacts","_Fragment","Container","Section","ErrMessage"],"sourceRoot":""}